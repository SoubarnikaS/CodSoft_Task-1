TASK 1
1. Generate a random number within a specified range, such as 1 to 100.
2. Prompt the user to enter their guess for the generated number.
3. Compare the user's guess with the generated number and provide feedback on whether the guess is correct, too high, or too low.
4. Repeat steps 2 and 3 until the user guesses the correct number.

Source Code :
import java.awt.Dimension;
import java.awt.FlowLayout;
import java.awt.Font;
import java.awt.Toolkit;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;
import javax.swing.*;
public class GuessNumber_GUI
{
    static int totalGuess = 10;
    static int randomNumber = (int) (Math.random() * 101) + 100;
    private static JLabel guessLabel;
    private static JTextField input;
    private static JButton button;
    private static JTextArea output;

    public static void handleGuess()
    {
        if(totalGuess > 1)
        {
            try
            {
                int guessedNumber = Integer.parseInt(input.getText());

                if(guessedNumber >= 100 && guessedNumber <= 200)
                {
                    if (guessedNumber == randomNumber) 
                    {
                        JOptionPane.showMessageDialog(null, "Congratulations! You have guessed the number!");
                        int option = JOptionPane.showConfirmDialog(null, "Do you want to play again?", "Game Over", JOptionPane.YES_NO_OPTION);
                        input.setEditable(false);
                        if (option == JOptionPane.YES_OPTION)
                            resetGame();
                        else
                            System.exit(0); 
                    }

                    else if( guessedNumber < randomNumber)
                    {
                        output.append("The number is greater than " + guessedNumber + "\n");
                        output.append("Guesses left : " + (--totalGuess) + "\n");
                    }
                    else if( guessedNumber > randomNumber)
                    {
                        output.append("The number is smaller than " + guessedNumber + "\n");
                        output.append("Guesses left : " + (--totalGuess) + "\n");
                    }
                }
                else
                    output.append("The number is between 100 and 200\n");
            }   
            catch(NumberFormatException e)
            {
                output.append("Enter a valid number\n");
            }
            input.setText(""); 
        }
        else if (totalGuess == 1) 
        {
            JOptionPane.showMessageDialog(null, "Game Over!\nThe number was " + randomNumber);
            int option = JOptionPane.showConfirmDialog(null, "Do you want to play again?", "Game Over", JOptionPane.YES_NO_OPTION);

            if (option == JOptionPane.YES_OPTION) 
                resetGame();
            else
                System.exit(0);
        
        }
    }

    private static void resetGame() 
    {
        totalGuess = 10;
        randomNumber = (int)(Math.random() * 101) + 100;
        input.setEditable(true);
        output.setText("Guesses left : 10\n");
    }
    
    public static void main(String args[])
    {
        JFrame frame = new JFrame("Guess The Number!");

        Toolkit kit = Toolkit.getDefaultToolkit();
        Dimension screenSize = kit.getScreenSize();
        int screenHeight = screenSize.height;
        int screenWidth = screenSize.width;

        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        frame.setResizable(false);

        frame.setLayout(new FlowLayout());
        frame.setSize(screenWidth / 3, screenHeight / 2);
        frame.setLocation(500, 250);
        frame.setVisible(true);

        guessLabel = new JLabel("Enter the number between 100 and 200");
        input = new JTextField(4);
        button = new JButton("Guess!");
        output = new JTextArea(20,50);
        output.setFont(new Font("SansSerif",Font.BOLD,12));
       

        frame.add(guessLabel);
        frame.add(input);
        frame.add(button);
        frame.add(output);
        output.setEditable(false);
        output.append("Guesses left : 10\n");

        button.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                handleGuess();
            }
        });

      frame.setVisible(true);
    }
}

